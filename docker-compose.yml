version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: .docker/main.dockerfile
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo-user:mongo-pass@mongodb:27017/struktura-dev?authSource=admin
      - REDIS_URL=redis://redis:6379
      - GRAPHQL_PLAYGROUND=true
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Mount source code for hot reload
      - ./apps:/app/apps
      - ./features:/app/features
      - ./libs:/app/libs
      - ./tools:/app/tools
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./turbo.json:/app/turbo.json
      # Exclude node_modules to avoid conflicts
      - /app/node_modules
    networks:
      - struktura-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo-user
      - MONGO_INITDB_ROOT_PASSWORD=mongo-pass
      - MONGO_INITDB_DATABASE=struktura-dev
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - struktura-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - struktura-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  struktura-network:
    driver: bridge